---
server: shiny
filters: [surveydown]
---

```{r}
#| context: setup
#| echo: false
#| warning: false
#| message: false

# Run this in your R Console to install the latest version of the package:
# remotes::install_github("surveydown-dev/surveydown", force = TRUE)

# Run this to install or update the Quarto extension to the latest version:
# surveydown::sd_update_extension()

# Load the package
library(surveydown)

# Run initial setup function (essential - do not delete)
sd_setup()
```

::: {#welcome .sd-page}

# Welcome to our survey!

Here is a basic "multiple choice" question where the labels are randomly sampled from 1 to 100.

If you refresh the page, the options should change.

```{r}
sd_display_question(id = "q1")
```

```{r}
sd_next(next_page = 'page2')
```

:::

::: {#page2 .sd-page}

This is another page in your survey.
```{r}
sd_next(next_page = 'end')
```

:::

::: {#end .sd-page}

This it the last page in the survey

:::

```{r}
#| context: server

# Create a vector of options
q1_options <- c('option 1', 'option 2', 'option 3')

# Randomly sample 3 labels from 1 to 100
q1_labels <- sample(seq(100), 3) 

# Assign the labels to the options
names(q1_options) <- q1_labels 

# Store the labels in the database
sd_store_value(q1_labels, id = "q1_labels")

# Create a reactive question
sd_question(
  id = "q1",
  type = "mc",  
  label = "Which of these numbers is the largest?",
  option = q1_options,
  reactive = TRUE
)

##################
# database setup #
##################

# surveydown stores data on a database that you define at https://supabase.com/
# To connect to a database to store the survey data, update this with details
# from your supabase account and database. For this demo, we set pause = TRUE
# which will ignore the other settings and won't attempt to connect to the database.
# See documentation for details at https://surveydown.org/store-data

db <- sd_database(
  host   = "",
  dbname = "",
  port   = "",
  user   = "",
  table  = "",
  pause  = TRUE
)

################
# config setup #
################

# Use the sd_config() function to customize features in your survey, like
# logic to conditionally display questions or skip to pages based on responses
# to skip other questions in your survey. See documentation for details at
# https://surveydown.org/config

config <- sd_config()

####################################
# Don't change anything below here #
####################################

# The sd_server function initiates your survey - don't change this

sd_server(
  input   = input,
  output  = output,
  session = session,
  config  = config,
  db      = db
)
```
